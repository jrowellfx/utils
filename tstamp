#!/bin/bash

# BSD 3-Clause License
# 
# Copyright (c) 2008-2021, James Philip Rowell,
# Alpha Eleven Incorporated
# www.alpha-eleven.com
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
#   - Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 
#   - Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
# 
#   - Neither the name of "Alpha Eleven, Inc."  nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# tstamp - written by Glen MacDonald for Orange Imagination & Concepts.
#
# tstamp: Adjust the timestamp of files.
#
# Usage: tstamp [OPTIONS] -N | +N [FILE]...
#
# Description: Change the access and modification timestamps on
#              files/directories. Useful when dealing with files that
#              have been created or mofified in a different timezone,
#              to "normalize" the timestamps.
#
#              For example, files modified in EST would appear 3 hours
#              in the future if being processed very soon thereafter by
#              a computer in PST.
#
#              In this example, to fix the time on these files, you could run:
#
#              tstamp -3 file1 file2 file3...
#
#              To put the timestamps back to EST, you could run:
#
#              tstamp +3 file1 file2 file3...
#
# Options:
#
# -R       Recursively descend sub-directories.
# -a       Change only the access time.
# -m       Change only the modification time.
#
# -N | +N  Subtract (or add) N hours from (or to) the existing timestamp;
#          N must be a whole number.  This option is mandatory.

Usage_exit() {
    echo "Usage: ${0##*/} [-h | --help] [-R] [-a | -m] -N | +N file..."
    if [ "$1" = help ]; then
	cat - <<@eof

Options:

 -R       Recursively descend sub-directories.
 -a       Change only the access time.
 -m       Change only the modification time.

 -N | +N  Subtract (or add) N hours from (or to) the existing timestamp;
          N must be a whole number. THIS OPTION IS MANDATORY.

@eof
    fi
    exit 1
}

#
# Parse options.  Stop when you get to the file list.
#
shopt -s extglob
while :
do
    case "$1" in
        -h|--help) Usage_exit help
        ;;

        -R) recurse=yes
             shift
        ;;

        -a|-m) if [ "$touch_option" != "" ]; then
                echo "${0##*/}: ERROR: Only one of -a & -m may be specified."
                Usage_exit
            fi
            touch_option="$1"
            shift
        ;;

        -+([0-9])|++([0-9])) if [ "$inc_or_dec" != "" ]; then
                echo "${0##*/}: ERROR: Only 1 increment/decrement may be specified."
                Usage_exit
            fi

            # Verify that the arg is a whole number.  In other words,
            # everything after the initial +/- should be a digit.
            #
            should_be_null=$(echo "$1" | awk '{gsub("^[-+][0-9]*","");print}')
            if [ "$should_be_null" != "" ]; then
                echo "${0##*/}: ERROR: Timestamp increment/decrement must be a whole number."
                Usage_exit
            fi

            inc_or_dec="$1"
            shift
        ;;

        -*) echo "${0##*/}: ERROR: Invalid option '$1'."
             Usage_exit
        ;;

        *) break # We're done processing arguments, so let's get on with it. :-)
    esac
done

# Verify that the mandatory increment/decrement has been specified.
#
if [ "$inc_or_dec" = "" ]; then
    echo "${0##*/}: ERROR: Missing mandatory increment/decrement parameter."
    Usage_exit
fi

if [ "$recurse" = yes ]; then
    while [ $# -ne 0 ]
    do
	f="$1"
        # If it's a directory, let "find" do our work.
        if [ -d "$f" ]; then
            # Note use of -print0 and -0 to deal with spaces in names.
            find "$f" -print0 | xargs -0 $0 $touch_option $inc_or_dec
        else # ...just deal with this file.
            $0 $touch_option $inc_or_dec "$f"
        fi
	shift
    done
    exit
fi

# Convert the HOURS to increment/decrement into SECONDS.
secs_to_inc_or_dec=$(($inc_or_dec * 60 * 60))

while  [ $# -ne 0 ]
do
    f="$1"
    # Get the existing modification and last access timestamps for this file/dir.
    modtime=$(ls -d --full-time "$f" | awk '{print $6,$7}' | sed 's/[:-]/ /g;s/\.000000000//')
    acctime=$(ls -d -u --full-time "$f" | awk '{print $6,$7}' | sed 's/[:-]/ /g;s/\.000000000//')

    modtime_in_secs=$(awk -v m="$modtime" 'BEGIN{print mktime(m)}')
    acctime_in_secs=$(awk -v a="$acctime" 'BEGIN{print mktime(a)}')

    adjusted_modtime_in_secs=$(($modtime_in_secs + $secs_to_inc_or_dec))
    adjusted_acctime_in_secs=$(($acctime_in_secs + $secs_to_inc_or_dec))

    adjusted_modtime=$(awk -v a=$adjusted_modtime_in_secs 'BEGIN{print strftime("%Y%m%d%H%M.%S", a)}')
    adjusted_acctime=$(awk -v a=$adjusted_acctime_in_secs 'BEGIN{print strftime("%Y%m%d%H%M.%S", a)}')

    if [ "$touch_option" = "" ]; then  # No -m/-a option specified, so adjust
                                       # BOTH the modification time AND the
                                       # access time.
        touch -m -t $adjusted_modtime "$f"
        touch -a -t $adjusted_acctime "$f"
    else
        case "$touch_option" in
            -m) touch -m -t $adjusted_modtime "$f"
            ;;
            -a) touch -a -t $adjusted_acctime "$f"
            ;;
        esac
    fi
    shift
done
